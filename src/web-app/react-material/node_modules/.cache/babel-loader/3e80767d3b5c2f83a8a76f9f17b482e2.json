{"ast":null,"code":"import _defineProperty from \"/Users/herlessalvarado/Documents/react-material/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/herlessalvarado/Documents/react-material/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/herlessalvarado/Documents/react-material/src/components/send_question.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 1000\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  }\n}));\nexport default function TextFields() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Here',\n    currency: 'EUR'\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"question\",\n    label: \"Write your question\",\n    multiline: true,\n    rowsMax: \"4\",\n    className: classes.textField,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"answer\",\n    label: \"Write your answer\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: values.multiline,\n    onChange: handleChange('multiline'),\n    className: classes.textField,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/herlessalvarado/Documents/react-material/src/components/send_question.js"],"names":["React","makeStyles","TextField","Grid","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","dense","marginTop","menu","TextFields","classes","useState","name","age","multiline","currency","values","setValues","handleChange","event","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAD0B;AAKrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADH;AAETC,IAAAA,WAAW,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd,CAFJ;AAGTE,IAAAA,KAAK,EAAE;AAHE,GAL0B;AAUrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN,GAV8B;AAarCC,EAAAA,IAAI,EAAE;AACJH,IAAAA,KAAK,EAAE;AADH;AAb+B,CAAL,CAAN,CAA5B;AAkBA,eAAe,SAASI,UAAT,GAAsB;AACnC,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AADmC,0BAEPJ,KAAK,CAACmB,QAAN,CAAe;AACzCC,IAAAA,IAAI,EAAE,gBADmC;AAEzCC,IAAAA,GAAG,EAAE,EAFoC;AAGzCC,IAAAA,SAAS,EAAE,MAH8B;AAIzCC,IAAAA,QAAQ,EAAE;AAJ+B,GAAf,CAFO;AAAA;AAAA,QAE5BC,MAF4B;AAAA,QAEpBC,SAFoB;;AASnC,QAAMC,YAAY,GAAGN,IAAI,IAAIO,KAAK,IAAI;AACpCF,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACJ,IAAD,GAAQO,KAAK,CAACC,MAAN,CAAaC;AAAnC,OAAT;AACD,GAFD;;AAIA,SACE;AAAM,IAAA,SAAS,EAAEX,OAAO,CAACZ,SAAzB;AAAoC,IAAA,UAAU,MAA9C;AAA+C,IAAA,YAAY,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,KAAK,EAAC,qBAFV;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAC,GAJZ;AAKI,IAAA,SAAS,EAAEY,OAAO,CAACT,SALvB;AAMI,IAAA,MAAM,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADI,EAWF,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,QADP;AAEI,IAAA,KAAK,EAAC,mBAFV;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAC,GAJZ;AAKI,IAAA,KAAK,EAAEe,MAAM,CAACF,SALlB;AAMI,IAAA,QAAQ,EAAEI,YAAY,CAAC,WAAD,CAN1B;AAOI,IAAA,SAAS,EAAER,OAAO,CAACT,SAPvB;AAQI,IAAA,MAAM,EAAC,QARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CAXE,CADJ,CADF;AA6BD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 1000,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nexport default function TextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Here',\n    currency: 'EUR',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n        <Grid container spacing={3}>\n    <Grid item xs={12}>\n    <TextField\n        id=\"question\"\n        label=\"Write your question\"\n        multiline\n        rowsMax=\"4\"\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      </Grid>\n      <Grid item xs={12}>\n    <TextField\n        id=\"answer\"\n        label=\"Write your answer\"\n        multiline\n        rowsMax=\"4\"\n        value={values.multiline}\n        onChange={handleChange('multiline')}\n        className={classes.textField}\n        margin=\"normal\"\n      />\n      </Grid>\n    \n        </Grid>\n    </form>\n  );\n}"]},"metadata":{},"sourceType":"module"}